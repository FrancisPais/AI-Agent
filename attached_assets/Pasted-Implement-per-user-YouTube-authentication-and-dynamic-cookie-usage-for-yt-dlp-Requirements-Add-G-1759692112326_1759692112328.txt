Implement per-user YouTube authentication and dynamic cookie usage for yt-dlp.

Requirements:

Add Google OAuth 2.0 “Connect YouTube” flow (frontend + backend) using OAuth consent for individual users, with scopes: youtube.readonly openid email profile. Store per-user Google account id, access_token, and refresh_token encrypted in DB. Implement token refresh.

After OAuth, add a second step to securely capture the user’s current YouTube cookies and bind them to their account:

Add a UI screen that accepts a pasted Netscape-format cookies.txt or a file upload.

Encrypt and store cookies per user, versioned with createdAt, lastUsedAt, and origin=“youtube.com”.

Validate the file minimally by checking required fields and presence of SAPISID/HSID/SSID.

Update the video submission pipeline to use the authenticated user’s stored cookies for yt-dlp calls:

When building yt-dlp args in youtube-source.ts, fetch cookies for the current user. If user has cookies, call yt-dlp with --cookies /tmp/{userId}.cookies.txt and write the decrypted cookies to a temp file for the job lifetime.

Keep existing extractor-args and flags. Add --force-ipv4, --sleep-requests 1, --max-requests 50. Do not use global cookies or server-wide cookies.

If user has no cookies, return a 401 with a message that YouTube cookies are required.

API routes:

POST /auth/google/start → returns OAuth URL.

GET /auth/google/callback → exchanges code, stores tokens, sets session.

POST /youtube/cookies → accepts multipart or text cookies.txt, encrypts, stores per user.

GET /me/connections → returns whether user has OAuth tokens and cookies.

Ensure all routes are protected and scoped to the authenticated user.

Security:

Encrypt cookies and tokens at rest using existing secret key infra.

Never log cookie contents or tokens.

On job start, materialize cookies to a temp file, chmod 600, delete immediately after job completes or fails.

Frontend:

In layout.tsx/page.tsx add a “Connect YouTube” button and a “Upload Cookies.txt” step after successful OAuth.

Show connection status and lastUsedAt for cookies. Block “Submit Video” until both OAuth and cookies are present.

Worker:

In queue-worker.ts ensure each job receives userId and loads that user’s cookies. If cookies are missing, fail fast with a clear error.

Conform to project code style:

No code comments.

Single if conditions must be wrapped in brackets and with a line break.

Proceed to implement these changes across the relevant files and wire up the new endpoints, UI, storage, and yt-dlp invocation accordingly.